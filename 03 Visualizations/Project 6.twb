<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
        <calculation class='tableau' formula='0.00020000000000000001' />
        <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
      </column>
      <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6.0'>
        <calculation class='tableau' formula='6.0' />
        <range granularity='0.5' max='12.0' min='6.0' />
      </column>
      <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
        <calculation class='tableau' formula='0.0' />
        <range granularity='0.5' max='6.0' min='0.0' />
      </column>
      <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
        <calculation class='tableau' formula='2.0000000000000002e-05' />
        <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
      </column>
      <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
        <calculation class='tableau' formula='0.089999999999999997' />
        <range granularity='0.01' max='0.10000000000000001' min='0.0' />
      </column>
      <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
        <calculation class='tableau' formula='0.13' />
        <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
      </column>
    </datasource>
    <datasource caption='data.world connector' inline='true' name='federated.1arkmi71ov62uk16x1bno06a2zqz' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data.world connector' name='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;jlee/s-17-dv-project-5&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmpsZWUiLCJpc3MiOiJhZ2VudDpqbGVlOjphYTAxYzZmMi1hMTBhLTRhYzQtOTU3Yi1lZmQwNDM4OTI0YzAiLCJpYXQiOjE0ODQ2OTcyMjcsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.gnpazqWHViw7QcLMWccGADp4i8rmzRFwx7tp3OknW0T4q9JhJFKP46h-mQJL1GKku9rnHN8dXJGQ_WbFPfJiLw&quot;}' connectionName='data.world connector' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[globalshipments].[v_11]' />
              <expression op='[census-pop-sex].[v_0]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt' name='globalshipments' table='[globalshipments]' type='table' />
          <relation connection='webdata-direct.1y7ebai0cftqih18oxgth1w4etxt' name='census-pop-sex' table='[censuspopsex]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (census-pop-sex)]' value='[census-pop-sex].[v_0]' />
          <map key='[v_0]' value='[globalshipments].[v_0]' />
          <map key='[v_1 (census-pop-sex)]' value='[census-pop-sex].[v_1]' />
          <map key='[v_10]' value='[globalshipments].[v_10]' />
          <map key='[v_11]' value='[globalshipments].[v_11]' />
          <map key='[v_12]' value='[globalshipments].[v_12]' />
          <map key='[v_13]' value='[globalshipments].[v_13]' />
          <map key='[v_14]' value='[globalshipments].[v_14]' />
          <map key='[v_15]' value='[globalshipments].[v_15]' />
          <map key='[v_16]' value='[globalshipments].[v_16]' />
          <map key='[v_17]' value='[globalshipments].[v_17]' />
          <map key='[v_18]' value='[globalshipments].[v_18]' />
          <map key='[v_19]' value='[globalshipments].[v_19]' />
          <map key='[v_1]' value='[globalshipments].[v_1]' />
          <map key='[v_2 (census-pop-sex)]' value='[census-pop-sex].[v_2]' />
          <map key='[v_20]' value='[globalshipments].[v_20]' />
          <map key='[v_21]' value='[globalshipments].[v_21]' />
          <map key='[v_22]' value='[globalshipments].[v_22]' />
          <map key='[v_23]' value='[globalshipments].[v_23]' />
          <map key='[v_2]' value='[globalshipments].[v_2]' />
          <map key='[v_3 (census-pop-sex)]' value='[census-pop-sex].[v_3]' />
          <map key='[v_3]' value='[globalshipments].[v_3]' />
          <map key='[v_4 (census-pop-sex)]' value='[census-pop-sex].[v_4]' />
          <map key='[v_4]' value='[globalshipments].[v_4]' />
          <map key='[v_5 (census-pop-sex)]' value='[census-pop-sex].[v_5]' />
          <map key='[v_5]' value='[globalshipments].[v_5]' />
          <map key='[v_6]' value='[globalshipments].[v_6]' />
          <map key='[v_7]' value='[globalshipments].[v_7]' />
          <map key='[v_8]' value='[globalshipments].[v_8]' />
          <map key='[v_9]' value='[globalshipments].[v_9]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <caption>Row ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <caption>Order ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <caption>Order Date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <caption>Ship Date</caption>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <caption>Ship Mode</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <caption>Customer ID</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <caption>Customer Name</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <caption>Segment</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_8</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_8]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <caption>Postal Code</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_9</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_9]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <caption>City</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_10</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_10]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_11</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_11]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <caption>Country</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_12</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_12]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <caption>Region</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_13</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_13]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <caption>Market</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_14</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_14]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <caption>Product ID</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_15</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_15]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <caption>Category</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_16</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_16]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <caption>Sub-Category</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_17</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_17]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <caption>Product Name</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_18</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_18]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <caption>Sales</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_19</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_19]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <caption>Quantity</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_20</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_20]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <caption>Discount</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_21</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_21]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <caption>Profit</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_22</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_22]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <caption>Shipping Cost</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_23</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_23]</local-name>
            <parent-name>[globalshipments]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <caption>Order Priority</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <caption>Country</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_1 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>25</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>26</ordinal>
            <caption>AreaName</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_3 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>27</ordinal>
            <caption>population</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_4 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>male</remote-alias>
            <ordinal>28</ordinal>
            <caption>male</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5 (census-pop-sex)]</local-name>
            <parent-name>[census-pop-sex]</parent-name>
            <remote-alias>female</remote-alias>
            <ordinal>29</ordinal>
            <caption>female</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KPI - Sales per person' datatype='real' name='[Calculation_46795279863955456]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)]))' />
      </column>
      <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_46795279869964289]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_21])/SUM([v_18])' />
      </column>
      <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
      </column>
      <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='Row ID' datatype='integer' name='[v_0]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[v_1 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
      <column caption='Market' datatype='string' name='[v_13]' role='dimension' type='nominal' />
      <column caption='Product ID' datatype='integer' name='[v_14]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[v_15]' role='dimension' type='nominal' />
      <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
      <column caption='Product Name' datatype='string' name='[v_17]' role='dimension' type='nominal' />
      <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
      <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
      <column caption='Order ID' datatype='integer' name='[v_1]' role='measure' type='quantitative' />
      <column caption='AreaName' datatype='string' name='[v_2 (census-pop-sex)]' role='dimension' type='nominal' />
      <column caption='Discount' datatype='real' name='[v_20]' role='measure' type='quantitative' />
      <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
      <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
      <column caption='Order Priority' datatype='string' name='[v_23]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[v_2]' role='dimension' type='ordinal' />
      <column caption='population' datatype='integer' name='[v_3 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Ship Date' datatype='date' name='[v_3]' role='dimension' type='ordinal' />
      <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
      <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
      <column caption='Customer ID' datatype='real' name='[v_5]' role='measure' type='quantitative' />
      <column caption='Customer Name' datatype='string' name='[v_6]' role='dimension' type='nominal' />
      <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
      <column caption='Postal Code' datatype='integer' name='[v_8]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[v_9]' role='dimension' type='nominal' />
      <group name='[Five Highest Sub-Categories]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_16]' member='&quot;Bookcases&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Chairs&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Copiers&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Phones&quot;' />
          <groupfilter function='member' level='[v_16]' member='&quot;Storage&quot;' />
        </groupfilter>
      </group>
      <group name='[Two Highest Shipping Segments]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_7]' member='&quot;Consumer&quot;' />
          <groupfilter function='member' level='[v_7]' member='&quot;Corporate&quot;' />
        </groupfilter>
      </group>
      <group name='[Two Least Used Shipping Mode]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_4]' member='&quot;First Class&quot;' />
          <groupfilter function='member' level='[v_4]' member='&quot;Same Day&quot;' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country, State'>
          <field>[v_11]</field>
          <field>[v_10]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='/Users/Jackie/Documents/My Tableau Repository/Datasources/federated.1arkmi71ov62uk16x1bno06a2zqz_1ub4yfa1mb4hoj1gsdcn709srt76.tde' schema='Extract' tablename='Extract' update-time='04/18/2017 02:04:17 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (census-pop-sex)]' value='[Extract].[v_0]' />
            <map key='[v_0]' value='[Extract].[v_01]' />
            <map key='[v_1 (census-pop-sex)]' value='[Extract].[v_1]' />
            <map key='[v_10]' value='[Extract].[v_10]' />
            <map key='[v_11]' value='[Extract].[v_11]' />
            <map key='[v_12]' value='[Extract].[v_12]' />
            <map key='[v_13]' value='[Extract].[v_13]' />
            <map key='[v_14]' value='[Extract].[v_14]' />
            <map key='[v_15]' value='[Extract].[v_15]' />
            <map key='[v_16]' value='[Extract].[v_16]' />
            <map key='[v_17]' value='[Extract].[v_17]' />
            <map key='[v_18]' value='[Extract].[v_18]' />
            <map key='[v_19]' value='[Extract].[v_19]' />
            <map key='[v_1]' value='[Extract].[v_110]' />
            <map key='[v_2 (census-pop-sex)]' value='[Extract].[v_2]' />
            <map key='[v_20]' value='[Extract].[v_20]' />
            <map key='[v_21]' value='[Extract].[v_21]' />
            <map key='[v_22]' value='[Extract].[v_22]' />
            <map key='[v_23]' value='[Extract].[v_23]' />
            <map key='[v_2]' value='[Extract].[v_24]' />
            <map key='[v_3 (census-pop-sex)]' value='[Extract].[v_3]' />
            <map key='[v_3]' value='[Extract].[v_31]' />
            <map key='[v_4 (census-pop-sex)]' value='[Extract].[v_4]' />
            <map key='[v_4]' value='[Extract].[v_41]' />
            <map key='[v_5 (census-pop-sex)]' value='[Extract].[v_5]' />
            <map key='[v_5]' value='[Extract].[v_51]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
            <map key='[v_8]' value='[Extract].[v_8]' />
            <map key='[v_9]' value='[Extract].[v_9]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='560984' timestamp-start='2017-04-18 02:04:17.035' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;United States&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>519688</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33777</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>19253918373.0</statistic>
                <statistic aggregation='Avg' datatype='real'>34321.688983999542</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>51288</statistic>
                <statistic aggregation='Stdev' datatype='real'>6199.9516509848645</statistic>
                <statistic aggregation='StdevP' datatype='real'>6199.946125021188</statistic>
                <statistic aggregation='Var' datatype='real'>38439400.474549949</statistic>
                <statistic aggregation='VarP' datatype='real'>38439331.953165248</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>682390848317835.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_1 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>2</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AK&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WY&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>519688</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_10</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_10]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_10</remote-alias>
              <ordinal>3</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1102</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;_iauliai&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zulia&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_11]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>4</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>165</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_12</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_12]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_12</remote-alias>
              <ordinal>5</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Canada&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Western US&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_13</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_13]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_13</remote-alias>
              <ordinal>6</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Africa&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;USCA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_14</remote-name>
              <remote-type>2</remote-type>
              <local-name>[v_14]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_14</remote-alias>
              <ordinal>7</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2834</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>2000</statistic>
                <statistic aggregation='Max' datatype='integer'>6634</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_15</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_15]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_15</remote-alias>
              <ordinal>8</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Furniture&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Technology&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_16</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_16]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_16</remote-alias>
              <ordinal>9</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Accessories&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Tables&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_17</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_17]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_17</remote-alias>
              <ordinal>10</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3787</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;\#10 Gummed Flap White Envelopes, 100/Box&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zipper Ring Binder Pockets&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_18</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_18]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_18</remote-alias>
              <ordinal>11</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16687</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>22638.48</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_19</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_19]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_19</remote-alias>
              <ordinal>12</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1982530.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3.5340223607090397</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>14</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.1433555026234403</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.143353592269083</statistic>
                <statistic aggregation='Var' datatype='real'>4.5939728106261812</statistic>
                <statistic aggregation='VarP' datatype='real'>4.5939646214927832</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>9583446.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_110</remote-name>
              <remote-type>20</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_110</remote-alias>
              <ordinal>13</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23269</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>201202103041133</statistic>
                <statistic aggregation='Max' datatype='integer'>2015021880140042240</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>14</ordinal>
              <family>census-pop-sex</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>53</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>519688</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_20</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_20]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_20</remote-alias>
              <ordinal>15</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>27</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>0.84999999999999998</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_21</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_21]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_21</remote-alias>
              <ordinal>16</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10320</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>8300.0799999999999</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_22</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_22]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_22</remote-alias>
              <ordinal>17</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13472</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>878.38</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_23</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_23]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_23</remote-alias>
              <ordinal>18</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_24</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_24</remote-alias>
              <ordinal>19</ordinal>
              <family>globalshipments</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1430</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-01#</statistic>
                <statistic aggregation='Max' datatype='date'>#2015-12-31#</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
                <statistic aggregation='Median' datatype='date'>#2014-06-27#</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_3 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>20</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>579679</statistic>
                <statistic aggregation='Max' datatype='integer'>38421464</statistic>
                <statistic aggregation='Count' datatype='integer'>519688</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_31</remote-name>
              <remote-type>133</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_31</remote-alias>
              <ordinal>21</ordinal>
              <family>globalshipments</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1464</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='date'>#2012-01-03#</statistic>
                <statistic aggregation='Max' datatype='date'>#2016-01-07#</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_4 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>22</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>295561</statistic>
                <statistic aggregation='Max' datatype='integer'>19087135</statistic>
                <statistic aggregation='Count' datatype='integer'>519688</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_41</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_41</remote-alias>
              <ordinal>23</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;First Class&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Standard Class&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5 (census-pop-sex)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>24</ordinal>
              <family>census-pop-sex</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>284118</statistic>
                <statistic aggregation='Max' datatype='integer'>19334329</statistic>
                <statistic aggregation='Count' datatype='integer'>519688</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_51</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_51</remote-alias>
              <ordinal>25</ordinal>
              <family>globalshipments</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15089</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>3.0</statistic>
                <statistic aggregation='Max' datatype='real'>218801408.0</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>26</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>796</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aaron Bergman&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zuschuss Donatelli&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>27</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Consumer&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Home Office&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_8</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_8]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_8</remote-alias>
              <ordinal>28</ordinal>
              <family>globalshipments</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>632</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1040</statistic>
                <statistic aggregation='Max' datatype='integer'>99301</statistic>
                <statistic aggregation='Count' datatype='integer'>519688</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_9</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_9]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_9</remote-alias>
              <ordinal>29</ordinal>
              <family>globalshipments</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3649</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aachen&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zwolle&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>560984</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.378676' group-percentage='0.110294' measure-ordering='alphabetic' measure-percentage='0.334559' parameter-percentage='0.176471' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
          <calculation class='tableau' formula='0.00020000000000000001' />
          <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
        </column>
        <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6.0'>
          <calculation class='tableau' formula='6.0' />
          <range granularity='0.5' max='12.0' min='6.0' />
        </column>
        <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
          <calculation class='tableau' formula='0.0' />
          <range granularity='0.5' max='6.0' min='0.0' />
        </column>
        <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
          <calculation class='tableau' formula='2.0000000000000002e-05' />
          <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
        </column>
        <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
          <calculation class='tableau' formula='0.089999999999999997' />
          <range granularity='0.01' max='0.10000000000000001' min='0.0' />
        </column>
        <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
          <calculation class='tableau' formula='0.13' />
          <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Crosstab + KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_94153444553428992]' derivation='User' name='[usr:Calculation_94153444553428992:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person' datatype='real' name='[Calculation_46795279863955456]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)]))' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46795279863955456]' derivation='User' name='[usr:Calculation_46795279863955456:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
              <calculation class='tableau' formula='0.00020000000000000001' />
              <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
            </column>
            <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
              <calculation class='tableau' formula='2.0000000000000002e-05' />
              <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Least Used Shipping Mode]' derivation='InOut' name='[io:Two Least Used Shipping Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI - Sales per person (copy)]' derivation='User' name='[usr:KPI - Sales per person (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]'>
            <groupfilter function='member' level='[io:Two Least Used Shipping Mode:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio' datatype='real' name='[Calculation_46795279869964289]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_21])/SUM([v_18])' />
            </column>
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_46795279869964289]' derivation='User' name='[usr:Calculation_46795279869964289:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' palette='red_black_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 3 w/ Set and Parameters'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
              <calculation class='tableau' formula='0.089999999999999997' />
              <range granularity='0.01' max='0.10000000000000001' min='0.0' />
            </column>
            <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
              <calculation class='tableau' formula='0.13' />
              <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Five Highest Sub-Categories]' derivation='InOut' name='[io:Five Highest Sub-Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI - Profit Ratio (copy)]' derivation='User' name='[usr:KPI - Profit Ratio (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]'>
            <groupfilter function='member' level='[io:Five Highest Sub-Categories:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI w/ Two Highest Segments'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6.0'>
              <calculation class='tableau' formula='6.0' />
              <range granularity='0.5' max='12.0' min='6.0' />
            </column>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <range granularity='0.5' max='6.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Highest Shipping Segments]' derivation='InOut' name='[io:Two Highest Shipping Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column-instance column='[KPI - AVG Shipping Cost (copy)]' derivation='User' name='[usr:KPI - AVG Shipping Cost (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]'>
            <groupfilter function='member' level='[io:Two Highest Shipping Segments:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab 3 Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Profit Ratio Low' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='0.089999999999999997'>
              <calculation class='tableau' formula='0.089999999999999997' />
              <range granularity='0.01' max='0.10000000000000001' min='0.0' />
            </column>
            <column caption='KPI - Profit Ratio Medium' datatype='real' name='[Parameter 4]' param-domain-type='range' role='measure' type='quantitative' value='0.13'>
              <calculation class='tableau' formula='0.13' />
              <range granularity='0.01' max='0.20000000000000001' min='0.10000000000000001' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Profit Ratio Low to High' datatype='string' name='[KPI - Profit Ratio (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 3] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_21])/SUM([v_18]) &lt;= [Parameters].[Parameter 4] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Five Highest Sub-Categories]' derivation='InOut' name='[io:Five Highest Sub-Categories:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_11]' derivation='None' name='[none:v_11:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - Profit Ratio (copy)]' derivation='User' name='[usr:KPI - Profit Ratio (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_11]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Profit' datatype='real' name='[v_21]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]'>
            <groupfilter function='member' level='[io:Five Highest Sub-Categories:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-22170906.555965275' min='-71639794.07609421' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='20516614.029882006' min='-11893614.795813307' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Five Highest'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_16]' derivation='None' name='[none:v_16:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='Sub-Category' datatype='string' name='[v_16]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Sales Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI - Sales per person Medium' datatype='real' name='[KPI - Sales per person Low to High (copy)]' param-domain-type='range' role='measure' type='quantitative' value='0.00020000000000000001'>
              <calculation class='tableau' formula='0.00020000000000000001' />
              <range granularity='1.0000000000000001e-05' max='0.00020000000000000001' min='0.0001' />
            </column>
            <column caption='KPI - Sales per person Low' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='2.0000000000000002e-05'>
              <calculation class='tableau' formula='2.0000000000000002e-05' />
              <range granularity='1.0000000000000001e-05' max='0.0001' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - Sales per person Low to High' datatype='string' name='[KPI - Sales per person (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[Parameter 2] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_18])/(SUM([v_5 (census-pop-sex)]) + SUM([v_4 (census-pop-sex)])) &lt;= [Parameters].[KPI - Sales per person Low to High (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Least Used Shipping Mode]' derivation='InOut' name='[io:Two Least Used Shipping Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - Sales per person (copy)]' derivation='User' name='[usr:KPI - Sales per person (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='male' datatype='integer' name='[v_4 (census-pop-sex)]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='female' datatype='integer' name='[v_5 (census-pop-sex)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]'>
            <groupfilter function='member' level='[io:Two Least Used Shipping Mode:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-7576056.0056048259' min='-14871981.943447307' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='6544013.2543693203' min='2491489.4633023124' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <size column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Shipping Costs Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost' datatype='real' name='[Calculation_94153444553428992]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([v_22])/SUM([v_19])' />
            </column>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_94153444553428992]' derivation='User' name='[usr:Calculation_94153444553428992:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]' />
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Central US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Eastern US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Southern US&quot;' />
              <groupfilter function='member' level='[none:v_12:nk]' member='&quot;Western US&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-6276191.6467133826' min='-14964330.029719662' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='7107994.7567524761' min='2279878.0261297375' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Region Shipping Costs Map w/ Parameter'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='KPI Medium' datatype='real' name='[KPI Low (copy)]' param-domain-type='range' role='measure' type='quantitative' value='6.0'>
              <calculation class='tableau' formula='6.0' />
              <range granularity='0.5' max='12.0' min='6.0' />
            </column>
            <column caption='KPI Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.0'>
              <calculation class='tableau' formula='0.0' />
              <range granularity='0.5' max='6.0' min='0.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column caption='KPI - AVG Shipping Cost Low to High' datatype='string' name='[KPI - AVG Shipping Cost (copy)]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#10;ELSEIF SUM([v_22])/SUM([v_19]) &lt;= [Parameters].[KPI Low (copy)] THEN &quot;Medium&quot;&#10;ELSE &quot;High&quot;&#10;END' />
            </column>
            <column-instance column='[Two Highest Shipping Segments]' derivation='InOut' name='[io:Two Highest Shipping Segments:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_10]' derivation='None' name='[none:v_10:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_12]' derivation='None' name='[none:v_12:nk]' pivot='key' type='nominal' />
            <column-instance column='[KPI - AVG Shipping Cost (copy)]' derivation='User' name='[usr:KPI - AVG Shipping Cost (copy):nk]' pivot='key' type='nominal' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[v_10]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Region' datatype='string' name='[v_12]' role='dimension' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[v_19]' role='measure' type='quantitative' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]'>
            <groupfilter function='member' level='[io:Two Highest Shipping Segments:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]' field-type='quantitative' max='-6276191.6467133826' min='-14964330.029719662' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]' field-type='quantitative' max='7107994.7567524761' min='2279878.0261297375' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' />
              <text column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]' />
              <lod column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]' />
              <geometry column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Latitude (generated)]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Two Highest Segments'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_7]' derivation='None' name='[none:v_7:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_22]' derivation='Sum' name='[sum:v_22:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='Shipping Cost' datatype='real' name='[v_22]' role='measure' type='quantitative' />
            <column caption='Segment' datatype='string' name='[v_7]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Two Least Used Shipping Modes'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1arkmi71ov62uk16x1bno06a2zqz' />
          </datasources>
          <datasource-dependencies datasource='federated.1arkmi71ov62uk16x1bno06a2zqz'>
            <column-instance column='[v_0 (census-pop-sex)]' derivation='None' name='[none:v_0 (census-pop-sex):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_18]' derivation='Sum' name='[sum:v_18:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[v_0 (census-pop-sex)]' role='dimension' type='nominal' />
            <column caption='Sales' datatype='real' name='[v_18]' role='measure' type='quantitative' />
            <column caption='Ship Mode' datatype='string' name='[v_4]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]'>
            <groupfilter function='member' level='[none:v_0 (census-pop-sex):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</rows>
        <cols>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Crosstab + KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Two Highest Segments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Corporate&quot;</value>
                <value>70386.390000000014</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_22:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Consumer&quot;</value>
                <value>114143.09390000007</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI w/ Two Highest Segments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' type='color' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI Low (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Highest Shipping Segments]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_1 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_11:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_13:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_23:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_7:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Region Shipping Costs Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_94153444553428992:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Region Shipping Costs Map w/ Parameter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - AVG Shipping Cost (copy):nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI Low (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Highest Shipping Segments:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Crosstab + KPI 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279863955456:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Two Least Used Shipping Modes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Same Day&quot;</value>
                <value>619054.5700000003</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_4:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;First Class&quot;</value>
                <value>1704045.5900000429</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' type='color' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Two Least Used Shipping Mode:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI - Sales per person Low to High (copy)]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Region Sales Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='slider' param='[Parameters].[KPI - Sales per person Low to High (copy)]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[Two Least Used Shipping Mode]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[attr:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_0 (census-pop-sex):nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_10:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_12:nk]</field>
            <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Sales per person (copy):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:Calculation_46795279869964289:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Five Highest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Storage&quot;</value>
                <value>1056414.5200000007</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Phones&quot;</value>
                <value>1599679.5600000042</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Copiers&quot;</value>
                <value>1393871.2000000014</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chairs&quot;</value>
                <value>1392548.9700000007</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[none:v_16:nk]</field>
                  <field>[federated.1arkmi71ov62uk16x1bno06a2zqz].[sum:v_18:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Bookcases&quot;</value>
                <value>1375712.3300000022</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 3 w/ Set and Parameters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab 3 Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[io:Five Highest Sub-Categories:nk]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='slider' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1arkmi71ov62uk16x1bno06a2zqz].[usr:KPI - Profit Ratio (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Crosstab + KPI' width='192'>
      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
      /P9T1eyITCTVPQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 2 w/ Two Least Used Shipping Modes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nO3deXBk133o9++5tzd0N7qxNvYdA8yG2ThDDof7JomWbNGxrRc/269ip5JU
      KnnPcfxHUqlKlfJSSSp+lXq240rVK7si+zm25djUk0iKIjVcR8PZF8xgAAz2vRu97+tdTv7A
      cCQKoEjF5FxQuJ8qFgfonpnfJfvgnvO7v/M7Qkopsdn2KMXqAGw2K9kDwLan2QPAtqfZA8D2
      uSqkIvzgB68TTSa5Nb0AUnJjevYj78nG1kikUixM32I9lv7Ia9PTd6gan98y1fG5/ck2G/DB
      2ddx946hyAov//tvMfPoowyFQly/+B43bi/wpa//OrW1aS6nWylPfJ+2Q6d5c22R/ccfJb1w
      mxtLq3ztmSzjdxb4+j/7Bs1+z2can7CzQLbPUy4V5/03XsHVPUoykcfQs4Q8PkzTw7Fj7dxY
      rTJSl+FbL1/h8FgPyUSSx778K0xe+CHOpgHcRop4PIXqdHP6hZc41NvymcZn3wFsn6uV2VnK
      io8jw4MkgxlMo4zP6Wb+7h3ev5jluRe/hsyu8tijOvsODVOtVJi6fZlDjzzJ5uIsOcPNU2fO
      cGd2hVDQ95nHZ98BbJbYXA8T6u60fBFqDwDbnmb1ALR9gUkp+aSfn1JKdF3/xPdZxV4D2H5u
      4+d+wJXFDGdOjhJo6abB68GhquSLFRJrSwQ6B+hub+L1l/9f4pqbVofk2a+/SDqRJtQWIhmL
      09jSTDqZpKklhNNh3c9hewDYfm7FXA63v55iJsXKyjqXbswy0tNE2RmkvpolVHbQ1eYlmhP8
      7u+9xPf++m+JLs3y6iuv0dEzxMxSlOfPjPLO5Xn+xe/+C7pa6y27FnsKZPu5CcXF4SPH8LpV
      NFPnK1//VU4eP0hmZYGWUAvuOgdCuNELUX508Ro6MD9zF3+jn7zmoKNFZSFRoSVoMre+Ye21
      2Itg28+rXMjjqPNhahVqmo7D5UEvZ0lkK3SGmoglM3R3dVEpZAknc7Q0BnEpkkgiRWOwgWQq
      RVtbK9FonJ6+ftxO1bJruT8AdF2nVqtZFojNZoX7awAhBIpiz4hse8uOU6BUfBPhqaeSi9Pa
      2Y9DQKmQpqA5CDVat2Cx7U5GbBozvojSeRQjfA218zSUlsHRh9rWgZlbw9i4jdL2EDI5jnS2
      owb9GNkyzv4xS2PfngWSJj/43ndwhfbhqUU5cUZw8eJ1hvtbeevcbV74ygvk1ucx6zppcpeZ
      Wd4ACScff5yJyxfpPniC46N9FlyKzSpKQz8yPY++fBvnvucw1q6jdvdhbOZQ2zqQ6RXMShkZ
      mwGlCVHKQqgbqhmrQ98+AGrlLCvhTYyoxthoK4lEnERslYJW4vDDD3P9/EWagi5mbs7S2x+i
      weOgqbWRG5fuUCyWiVy9ag+APcZYvwT+A6ieFNKoIqWO4m3EEFGkXsMsl3EMnsFYvgpOCaaO
      qGsAYf2Ue9sAyCc3efZXfhuZWSFaNinlMjg9fjpC7azduUHfyD6iS6uEQi10dnQQ8HhobK4n
      n94kloOOzs+2Ws+2+wm3D7O4gNp2DCN8GUfvY+ir10EDbXYZR+/RrbvCwJPIzAQ4ejE3x8GI
      Y5YKKF6/dbF/Uhr0w5eFEFu/FgKkBARC7PBeIRDb/xjbHiVNA6FYl+b8JPcHgGEY6LpudTw2
      2wN1fwokpcQwDCtjsX1hSTBNUNStfwuFbdMA0wBFRUoT2JolSCkRFqfed6wFuvr+WRyhYY4f
      GABpcG1qgZOHRh50bLYvCBmZQCYmwdEKsgyuFiiHEYEe6D0F2SVkYg6UBoSWQBY0CLUhs2Ho
      ehbR2GhZ7NsGgDQ1ljcTiFSVzZlr5NUgnV4n769OcmutSFtdmUxZoavZz9JalONPPsvq1BWC
      PQf56lOnrbgGm9UauyA6g2huQK4uQ2MruALIXAwhJSLYjVw8Cy3PQJ0KqgZNfZDeBH/A0tC3
      3X+KqTBLK2vMzcxRlvW89NXnqVTKZFIFvvKVJ9GVRnpDQdIFeP6JR1iYmSJXk0SjcSvit+0C
      8u6rUBeAcgkaOkHWQFWhVoTYHDK5hGgYhvImcuZthMOJnHwFfA1gaJbGvq0WqJiJUxF+lHKG
      ZEUy1N9BbH2dlfUVcDQSqodYRdDX1kCdx02uVGZxYYHOvmGGe7ssvRibNbY+QluZQUwdFAfc
      m+uTnIeWfT/+/ofv2/qdbGUTrcsb2sVwtj3NLoe27Wk75qB0rYb+YUpUmuTyhQcZk+0LSkod
      ff4sRjqMvvQ+RnwJKUEWI2h338Ss1dAX30XfmMBMzaPNvYOsWfvsaYdiOMk//OW/w9V1hMdP
      jFIs5fng2m2eevgUWjVHpuqgp8XH3NIaowcPMnPnDvsPH2Lq9m32Hz3O6swE7f0H6WqzLrVl
      s4a5fhWz6kbVE5h6M0RuozT3oy9dBG8jxvoEZjKB89Ap9Pn3ULtPgIWbYWCHAaDXisTzZfT5
      OYzEPJ2HTrB5d5wPvC00iTgXrk9weHgYny/AK6//kMhmhPqGAFMzt5lenie2tsaXv95qD4A9
      SOo1RDCEEVlCeHwYmQRIE4kDRXEgjSqO/pNot7+L8+CXMSOXMPTTOEKtlsW8bQqUjizSNXKK
      3mY3mrePR08comtohFpug9mlMIGGBrz1DQz2d9HU3ERfg+DapetIpw+328f+oX1MzVi7z9Nm
      DbVjDJmeQWnqBbOEo+8R9Pl3UZu6MYsJlGAHRnQSpe0AZmYJsyZRgg2WxvxzLYJN00SIj6at
      DMNAUVSkaaKoCqZhIBTF0tSWbfeQtTLCVWd1GB/r/gAwTdOuBbLtOffXAKZpomnWPpWzfYHc
      K4m/V9W29UhLCKQ0EUL5yPfuv/8nZwUfTjwsnilsrwWSJjevXqSIlycePg7A1MRVmhtbURwe
      ro3f5rkXXsClbg98c22eQMcAXsfurf+2/dPJShK5egUczSiDp5DzP0BWTQg0I/NRaH8YGbuK
      qO9Hdh2F1BwyOYVoPIZcewcx9A3I3kBmY4gDv4rYTZ3hCollZiIlvvrsGOfefI21pEnAW0EO
      COZnplgtuNC++3fkNTf9IT8rqRpBp8ZaOMeJsQF63R6+8+ZbjJ54nFOHhq24JtvnTLgbkGig
      VQCJrNZAGsj0OqKhBxk+D7kKUskikFAfgoV3oNmD6NgHmgGBDtiYtPpStmeBpClRVQcKJqls
      ns31WaomFLNJ6pt7eOjkGEXTT8grmF2I8NSzz+IQQQ4PDxKPR9nY2EC43czMLVpxPbYHQFbz
      iOZDoBWQ+TSi+xhIgeg9A0YR6gch0AZ6EXIxKGYRA48i0/NQjCELm2Aq0NwBpYql17KtFkia
      Bpc/eI+y8KGWM5QMB719HQS8HnRTweENEJubJKY7GGxvpHdohPWlFZwOlWqtiNfnYnxihq6B
      UY4fsO8Av4ikXobMGrgDkMtDwAumA+o8kE1Ccz8UwoALsitbXxdT0Diw9bVSB4oBhgKNPZYu
      A+xiONuedn8AfJpe7zbbL5odH4TJeyks5d69Sdc1FNVx/+udaJqG0+n83AK17V7lcoX1ZImu
      Fh/heJ5QS5BKsYSuOOlo8iKQLK8naWwKUCuXMVQX7Q0ekukyTY1eS7uIbK8Fqhb5q3//14T6
      D/DE8VEKuoPk9C3aHzpNPhalp7uDYqkECFLpHAMDvWyuL/PW+Qm++vwpdOpoD9l1QHtJOlem
      nM0yWdFpcsO1yRU0XcEpTJofGmRtaYP1MgSCddyaj2NK8Iy28vL7S/zeS8csPaRi2x0guTbB
      pWWdF0+P8q2/+jZOTDrb2sjpRVShUikZTMwu85XnH+G9t9/i5GOPE0tXKGWyqGYFUyr83n/+
      n+FU7FKIvSIWTXFzNcPTx3u5dWeFgurBq5WZXs/yjRePM35rDl9DgEQ2j88dwKGXWUnnkJrg
      qTOjhPxuy2Lflgb1NXSwePsS71+8jinAREMRIEwn5ZqJlAqPf+mrxMMr1HnrKBVraDUDzQSj
      plA17Ydge83sRhK3S2VpPUVZqHicKn6/m77eFhbmw+zvCxFJlGgINKAVM6RNhV86vZ99Pc3U
      u609pGiHNYCkmM9TMwUuxaBqKNTXuUBRSKUyNDU1YEqB1KvkSxWCwSDZTBqPtx60MobiJhjw
      2d3h9qif/jhl82WC9XVICYoiPtJpcDf4SBbINE2r47HZHqj79x/DMOznALY9Z4cJmGRtaZ5M
      VTC2/9M/yS2XSridks10ic6P7PCRFIslfL7P/ph72+6QTGaZCJc4PdTApbub9HS3UkylyZkO
      zhxoRxGCu/Pr1LeESEVjlBQXPX6FhWSFo/s6CLitWzduGwDF1AZnL4zz/NNnOP/2m6RqTgbb
      vEzMzHHsxEkmblyl98Bx8pFlnMFe6pUM4XiB6YlJfvk/+iqFmovZG+fxtg3QUN+EruV4+e/+
      kV/+zd/h2IEhCy7R9nkLBHwYSylWNjOMjXYzu7gOoo6gw6CiS0S5QDxfpuyqMLOQYmAwxPhM
      kmCD9WvFbQNAqxQIdQ3S2eznalanxVNmfC7OoUP7uXn7Fj2jR7l78wNiiQpd3QXKFfhPfuc3
      UKWToc56Xr8wRang5jee7ubdC/OYep59B8YYGx2w4vpsD4DT6QABTiEoVWpopkCYNcpyq8Qm
      Es0hDINIqkh3RyNGuYTbX8dIt5+5SJ4T/dZti1S/+c1vfhN+vCPM5Q0yO36ehUgBt1ImU4N9
      /d20trQiUAi1teF1e3G7FBpaugnVmyysZXCRRHd4cXoaMeJLFJQ6lqdu4qxvoSfgIJZX6Gy3
      H5D9IgpH05RqJi0tQSLRNAeGOvA7JKa7jmgkyaHRbnpDAVob/dSpBtJdx+HuemYiRY4MtuCw
      8JnRjsVwP53K2ill9XF1Q/cP0tjh692S+rI9OFLKXf3//SN7gu00qG2v+VRdIeyf4LafRUoJ
      0kTcPwCDrQMx4McNcU0dhAOkwb2NxFv/KE5LP1fbSiG0co6/+D//lL97+U1006RarZGPbTBx
      d4larYZhGBj31gumaWAYOrWahmma6Ma9rzUdu7J67zDj01QvfBukRBv/FvrqMsbyearv/xmY
      Ehm5Sm36bcxclNqNb2+1Rty8Se3in2JmrW27uS0LZOg1GnsP0kSaf/zOf2BzdZ2xI0dwe+v4
      x79/m6pwEQi2sDAxy+jhQVrqvbx37ibHHhplKVqiQeQJJyv8qz/8l3jsO8aeoIYOYkSWMCJX
      wNWG1Go4esYwa26EqiA9zQgymJkYir8NmVhDOfYiIplEbbD24PUdt+OnEhHmwwn0Qg7qvKiK
      IB1fJ5IqkasKNqev0DrUzsJmgfWVRdCyZIoKv/2bv0YkskZzgx/NXk7sGUZ8EjMxCaIZxR8A
      U8NYvYVj8CTGxh2kpiHUGrJWAKkjDQ2ZnEJpO2p16NvXAKZe4/b4TZq7h2gLuhkfn2RgeARV
      MVhaWqSxrRsPJv56P4WKjlFIEs1W6e7uoqWliXQszMJGklMPHUG17wB7npFYRGke+PEawTS3
      jtLdJZ+NjxTD2Wx7jV0MZ9vTdjgl0iSVSuBwujENSWNTw0++SCpXpClYT6mQx+H24rK4v7vN
      ejI5hUxvItoOITdvIjofheQdUBuh8wAYVdiYht6jsPYBiAbwuiAbgZ7HEU7rNsVs+5trpQx/
      87f/yFNPPsLKYoKR4WYyeh3dTXXEsnkKZZPhDj9vvvkjzjz9NKuryzx85nGCXpcV8dt2A18n
      xGaQCx8gek8jl94BpRHkKqJtBPQSMj6P6D0KTaPIhSuQVxEtI1unSVpox6FXSMfJFsoYtQI3
      pooEHTVmbhXoP3KaaiLMW5NReru7SG5usjR1HWdoH08f6XnQsdt2EeH2gr8bmV4G6UEEAsjV
      1a2T492N4PEDIJfOIYaeAwxIjEMyAK276IAMIRQeefpFzjw0Rn1zMwoV0lWd7t4ejh/ej9/v
      o6lesLi2SiIZxRtsos7Cem7bLpBZQuoCvF7QsoiBM2AWtn7ir34AhQ0QJUgsgUOFxALk15FV
      CQ3WFkh+Ymc4aZpIBMpPVOxJufW9rc7YEkWxrruvbXeTeg3h2L3T448Uw+m6tSf22WwPmn1O
      sO0zIJGmRCjKvQddCrB1UvxPP/C6X1h579fC4tnDDmlQgwvn3iae0/nSi1/B6/wZAZoaV6dX
      7HMA9jhj4xZGfBrRuB9KG+BsRZaWwfThPPJLyNwyRvgmkjYw4gh/F0JWkFoFtf8ZFLd1LTW3
      DYBcbJGlpMFoRwMLty5x4codjp08xvVrVxk8cJTlW5dp6RkklYjS2j9Cu9vDB+/Oc3MhwX/x
      u/8cp2qvB/YapXUQI3YXtXUAfXYCFB+4B1AcAmkYKA2DmNF5lK4DaJduohhuzFIYUdcKtTLs
      pgEgFAVdq3H37i104UJ3OZmZusOxM8+yPHkNV1MXIx31xFpaWQ9H8PrqiMfC5DJFDFNafe6x
      zQLa1KuIwACylEJpPYyZioG2iUkdItuGbGzDrEmc3gBKYxvoJYS/DcXrwSxmUeoDlsW+bQ0g
      pcmNy+cJZzVOH93P1WvjHDp2nKnb1xk+dBRZ0wg1uPn7b/8jnu79PH1klHB4kbzu5tknH8Ox
      w9lhtl9sspJGalWE04es5hDeVtALSOnATC2gdh4Bw0A4nchyCmmqCLcbWcwgAu2WFsb9/1oE
      a7UKa2th2ru68Xp2b4rLZvsk9gkxtj3tZ65Ya7UaH94eDF3DMOxdLrafTZbjyEoZmZ5HxuaR
      8t6xqutXkJUKMh9GagYyv46M3LU63O0DoFpM84OzPyIeXuM7f/998tkkdyZnWJy6zY/ev046
      V2J5/i7RVNaKeG27makhZ78PsRXkwk1w3GuHuT4OrlZwKMi570M2j1yfAjOFTKUtDXnbFKia
      T/HqG+dIZTJ4HV5OHOnitdffZd/YEaQOtVwFLVCHXs7xO7/9WzjsNa/tHrnyHjIZAeEDnOAw
      EAd/CSopSM4iRSPCmQLHGJSnkLE5RPeXEW0hy2LeeQokFKSWJ1vIs7iwSEOjD80QHB47RJ3P
      TzUbBUO1vK+jbZfpeQJx4FlEz2nw6OCsg+XzkNtAFmMIXwCZXEGmJsFVB95GaLGuEhR2OidY
      SkxTYugaKCqqkGiGidPhQAgFkGi1GorDidNhJ/1tO7ufXKwWwL1VCv2T6c7d0mvq/gAwDMMu
      hrPtOXYxnO3zce+o3Y8thtslXSF2aIxVJbIZo1AqIKoGdQEnHb2jOH8q3uWZGfpGR+11gA0j
      fB0zG0MdeAozegnqDkN+Emk6cQw9hlAE+tyriNanMaMXwNmIcEhkJY/a/zSKaxftCdbKeS5d
      HscUGmqhQs++XnLJFBduTHP84dPM3/yArv0P46oViMVXWUvpfP1rX7G0xbXNWmYujtRUKEcx
      83mEUsBYuoXSfmzr9ew8Zs1AFNLoq9Oo3aeQxQyoToTFn5tPKN2UbGysEgnHOHXyJFcvnqf7
      6NOsTd1mdWmZmlYmX6pg2rOoPU3tOI7a4kebvwlmDTO5gdI6glAqmIU0ZjoORgkzE0NtP4DQ
      Uqg9p1CDPox43NLYt90BVKeH/v5epDARNQ3FCXVuF/5gI488/AiLd67SfugYAbOMYlbwu8v2
      NGivkyVkzYHrxEtADVkDymuY5Rrm5jiOfc+gGkeQuhOZn0MaLoSZw9TrUHvbLQ3dXgTb9rSP
      dIbTNM3KWGy2B+7+APhZB2VLaWJKUHZRU1Pb7iGlCVoV4XQjS0nwNIFeBKmA248QIPUyKO6t
      zcBaFZwu0GoIV52lse+QBcpx5dYcJ47sRzMkfq+HpbnbLCaqdHYP0NvoweHxgqFR0028HheF
      UoWGYMAeHHtVcg65eBv6DiBzcVCckFkE6UYc/3VQQN7+FqL7N0GbQybyiPYmZDyHOPyUpaFv
      GwCmrhOPRvn239ymqqkcGKxnMRKnobmban09b168RcJwo6TDlKnjqcePcvaHP+TX/tPfZ7DF
      2sMObNYQLaPIzSXQNETPGeTqRTDlvWOSBHL5bfD2IfMbkFoEVwO0jkHhjtWhf0waVEJn136G
      errJVWp0dbUhpEk+uclGsoCpV2kI9bC/L8T4xCROVVCq2OuHvUompyE3t/X0d+41RF09uLzg
      8sPGOLQ9hAg2I1xexNCj4HJDdBxSd5Bla49I2lYMZxo62XwRRVER0sShmCyvR+js6MThUImE
      w/gbGvE4HaiKQKuVSaTz9PYPUmfhEz3b7iBNA4SCQCIRkAtDoHPXTo8/MgDsLJBtr7GfA9j2
      tG1rANPUyeWtnZfZvpikXkKbOYc0TGQlgbb640Wuvvg+Zq2ANvMGtZn30Ncuok1+F7NQtDDi
      nQ7IKGY5+841OhtVap5mQv46FGr4Ao1k0inml9Z45rnnCfo8VsRr282kRBbjSN3AWLyCVLZa
      n5vZRfSlu7j6nsQxcAZt9gZq9yPo068h3NZ+jnZYtUoq2RQLFT9O7RabikouHkVxumnft5/V
      hTvcGTrEY4cGHny0tl1NOH2IOt+9qtACsryJHHoIffkOwqFhJNYR2WkcQ09CNYlUWhEWtxLc
      NgAUxUFbVxeJ8Aw10czDB5qYbuolvLyIX6lS5w/is5th2XYgSzEwK5ilIq5HvoFMR9AX3sc5
      9svIfARR34Gp6Ch1HsxsFMfASatD/vhF8E47d3bbbh7b7icNHaHu3vT4R/YEG4ZhdTw22wP1
      kWI4e1O87Z/KNE3EDkWThmGiqsq915WtAjkpLZ9NbC+GqxRZXd8kFt3k4TOPYTd7tn1a+VyB
      8eX0VjudfBZPTy8nun1M3F0jWdRoafKzuJkn6Hcz2OhkJlrj+YesPV10+6Z4rcrr3/k7hh7+
      JT744avcXc6zr8fD9MoawyOjLC5s8MTjjzJ+8TxdI8eYmbzGidPPcOrYASvit+0i9fVePCQI
      NAfpbHMyXf5xeX2dWyWVyqMIwUa8wJOH9xHLWbsdEnYqhpMwcughInPjzK/GqBQ2KZjw5JNP
      UK0p+FTJxcs3Ud0uIpsRejrauX131YLQbbtNOJoipQmENJkJF4jGs4xPb9DSXE+moLF/pIuA
      U2G0p5nVjTSb2SKporUdyT+mM5yJNA1qmoaiOHA4VBRFYJomlUoVj8dDpVrF7XajVas43R67
      S5xtR/lSFX/dVtpcCLGVSRRi1+wjtzvD2fY0uxjOtqftuAhOZwoUMml6hoc/kgXSahUMqeL5
      qVP9wqurNLV34XHZ06C9yEzcRY+EcQ4eRJs/h9LxMOSXkaYDx9BjyMwKxuYEIjiCTE8jRQNq
      cxAzp+McOWVp7Dt2hnv3jVeoeNppn5uiIAN0Bk3uTK8QanJxZ1Pjy2dOEGqup6ppnHvrPP7G
      DvYNbJDMVzl4/DirC8s8cvKoFddjs4Bo2gcbCxjxdRwjv4KxfB5j4w5Kx3EAlMY+ZGEN06jh
      GH6C2tR5lNZHMXOTFkf+MVsiVxbm8NfVcePmbTKxZcKbOmdOHsbjC/HE44+T2FwlGY9y/r0f
      8fRLv0ZHs+DbZy/y8JE+/vrf/hFaXcuDvg6bpSSYNYRibFWDSgMlNIpQqpjFLEbkKoYWwNE5
      Qm38FZyHv3Lv92hYPQPftgbQynkWlsJshFco1aoI4aMjFKIz5KNUNrkyMUlXk4vF1RinH32Y
      y5evMzR8kGZ3EaVxmNe+87f8qz/4A5x2r9A9w0zOYGbCKC2HMRN3ULoeheIKZqmGLMVQ24cx
      E4uIxn3I7ByIIKJOQRayKB0nUbw+y2L/TBfBhWSY+USVo6MDuybNZbP9LB9Jg9p7gm17zafq
      DPeT74GfeKCBXRptu9cZTtfA4YByFjwNoBUAx1Z7FKMCegUcXjBrIMVWZ7hKATwNlrZI374l
      spTj6q0Fzpw+RrGQx+XxItj68M8uzNHdO4hi6mQjawQ7+8Go4fP7qVYqoDpwYFLVJX5fnT04
      9orkHHLxFqKzF1ktg/AiHAIZXUSc+A2opCF6A6k1QXkF0XEMmV0CVwDR9QjspgMypKGTSGZI
      hed4+Y0LeN0OWlr6MQoJOlqCvHd3mmRFYbjRQ0iDS+//kPbBAywsRKivD3Cgz8fZ927z3/6P
      f0id/fnfE+53hvO1QHYZapvQPQR6davswd+BuaYi9j2MXNGR0VnQcuCVUEhB0y47JjUWXWdt
      PUJrVx/oZRKxDSKbaXSjRnd/H8XICplsgfDKItLpJJWJM3rgNO2NQRYWlxB6lop9qPyeIZPT
      kJ2Fqg5qBRHah0yHoa4BNm4hjdJWO0RVgl4CBKKhA2QNhLUPT3fsDLcwO0N9aye5eJjmjh4y
      sTA4/bQ1+anUSsRTBTraWlEFrG2ECYXacbq8SLNGKZskVzHZNzKEak+B9hxpGghFBWludYbL
      bkCw68fTYWnCvRyhlObWey1kd4az7Wl2MZxtT9uxM1w8HkeaBtFYnI8bHel4jGpt5/LpVDxh
      H5y3Bxm6xqVby6zEsly7s8L1uRhSSjLJDOdurxLP1ygVCtxeTbO6GuPcrVWKNWsXi9sGQK2Y
      5Y/+5/+d6OYq/9O//lMWZu7wg7PvEY1ucvHCBa7fnCK8usTF995lbn6RV175Pol0knfeeouL
      V+8wdesKf/Hn38buL7H3LC5FSFcMVNVBZ2s965spTGApnMJX58LrVrg8HaZQKDG/nqSUy5Io
      WDvt3p6AlZLjB7t55ZV3OXhohPDaOlPj4zhUnXTJjZq5yriu0tPgJRXdJLJ0hxvNjaQzdTgS
      C0yk4wz3WbvR2WYNCfR1NTG9GOH4cDsOh0DTDIb62ylXyly8Pk+2YlBIJulsrKOvxUeppEGT
      27KYtw0AoTgYOvwQt2YXONAWIpZK0NTcQqC+mZH9Q4iMkzeuR2kNNbAeT+GpbyTg8+LvCWKU
      VYzaJmvJTbsWaA8a6mvn0uQGvR1NzK0laW5u4Pb0Gj1tAWYjWY4fGaLJ6yCSKlApllhPljnR
      Z+0ZYZ+4CJb30lYfprGunnuH7kOn6GiuR0qJlKAo4mPfb9vbdN3AsYv3i9ud4Su0/TwAABKr
      SURBVGx7mt0ZzvYZkFuH4ik/lVO51wECANMERUGa5o+/twsehG3LAunVIt975fvo1SLf+e7r
      fNokVXLhLpNr6Z/5nko+RSJVIry6/rHpVdsXj4xMYE79AzJ8F/PC/43UdOTi9zFX5rZezyxi
      Lp7FXL6GnPg2cvKHyPk3kZP/AVmqWBr7tkWwXqsyf/0Kt3tC3BifZ6jnEh9cneDU0VFu3w0z
      NtjMneU0Tzw6xvtvv8vRx57i+qXzDDQ1cCOSZXJgmIACEp16UWK97KYrKLm7Eqal3sdGQlDN
      rHL62WeYvXmd409+mWMH7bMGvtCaeyE+C029UFi7lw56HFZjAIhgN3LxLWgMQuAwGEWQGmLw
      MDKbRHi7LAt9hzQo7D9ygB+89j6Hh3uZvTsHehHDGUDqU+RkB3olwbXr4yiqwfLsHK3DJxjy
      5vEdeozwrcskNIOqVuORo8PcunyN2HKZ5vYuujq6aeoLUYp4Obh/mNT6IvOri/YA+IKTd78P
      vp6tsufUHASHwFiHZBbpd4AqEa1jWz/tywsgguAykCtXET1fsjT2bcVwRq1CLJ4iU8jjdbop
      lVLE0mX6ezqZW1xhsK+LxZUwwwOdLC6uMXr0BBszt/AHmmnqGaCUjhPbWKLiaKCvycVyNM/h
      fe3cmlzkxImjTN66Q39fG8mCTj4ZpWPwIMO9HZb+R7D900itDKYOqguM2tZJ8VLfuhOkV6B1
      H9RK4A6AXgTh2pp812pbZwpbaNsAsNn2kvsDwK6Js+1F99cAH/fgyjQMhKoigEqljMvt2ToN
      EFB/Ou1l25PM3DpGbAa15zRm+CqicT9UNpGaA7X7EGh59NWrKK2HEVoas1RB7RzBzCRRW6wt
      m9n2Ca4WkvzhH/z3ZFNh/qt/+T9w/doHlKplrl65zmuvvsz5y9dZX5nnznKcxZlJFpY32Fie
      ZeLuIpl0kvHrV8lX7H0Fe4mxPo5oPIiMTWCWHQh3PbhaMJMLYBiY4WvgGUTxBdHmriD8bZjJ
      BYzohtWhby+FqOQSfPsv/py6rmHWNosMdTtxORSaB46yOn4BZ70PFS+BoIfZaA1nLkVnu5+3
      rt/l2RNj1AcV8ozy4jP7rLom2wNmFuIYKz/CSOdRex9CZjcQahXRfBg1NADVPEZiATOxiKzo
      CAc4T/wa+vxtnCMnLI19hzmMoGv/GHfnlxho8aIoDgL1Ae5O3oU6H4MD/QjA42+gmgmTLJWZ
      WVqmraUBofo5MnYA1S6F21PM1CLSAOeBJ5HpWUSwA1nNI3Mb6DNvY+Y2kLlVlI6HUIL14GnF
      jN5EFhYwSwVLY//UO8I+POTsQ1opw5tn30bxtvLlZ8+gKKpdAGfbRlZLCLfX6jA+1v0BYJrm
      JzbGstl+0dzPApmmaT8HsH127mUKP3ZW8EmvPyA7HJBR4catSR46dpgrNybpavPT0TuC41PG
      WS1k0Rw+/J7dezq47bMlk7PIyCrK4eeRK2+BdwwyN5FVBQ4+D/lViE0hlQaELCBzWURLF7KQ
      gt5nEH7rukPvcE5wiTf+4Ts0BD28/J23+PWvnyGTSHD51iz7Dx5mcXaS+tAgAS1BXvho9Zsk
      SiqDLU6uTa4QVDUWtGZ+6WQnV8dn+MZv/Q7eTzt6bF9MjUOwuYgsrCLLVXBoiO6TMH8JABHs
      R6ZXES1HwSNh4Rp0Hoe5H24voX7Adjwm9cjxfbz63Xc5crCfWCxMPJbm4ZMnWV9YpH3oGLXU
      Gtcm58nlMmiGQTpfZGo1zpceHSGXV3n0sceIRBMUk+vES/Yeg194ehmqWcinEVKHzBryzquI
      vkegnENKHVkqI/xeWLmM6H0UOf0qInQM3C5LQ99WC6RViqysrLMWi9HiC6C4JG6nC2+gkejm
      Jt7GEOVMgnIySlHx0+SVRNIGw+1+xhfWeOaJU7z/3gQ9XU7WN+M899Vfp9Gze7fE2f7pZG4N
      ikloGEa4nUiNrVaJphPKSeg7BTUN4fEiS2mEtxGZXoBKCZr3I1zWDQK7GM62p32kGM5Og9r2
      mk/uCnFvL+dPLmN36vzwcQdm2F0i9g5p6sjsOsLXgaymABXhb4VyYuuBmLcFnE5krQZ6AXQN
      4e9AOKzLGG7vDFfK8G/+6N9Syif5X/63P2Fy8jrlaoVIJEa1UiayGWNl+g6ZXJFIOEKtViUc
      jlBKrjE7v0EsFiVXrJDPZtjcjLM4N0U4a0+t9gJZSmEWk2gzb6FNn0VWtsocpFbBiFxGj8fQ
      599GX7wFtRL6/BuYZWs/G9uGnqkb+LQs5y5cwRBulhaWWF9ZYz5eodsnCFcUDjR7kesr3Jha
      4diBTm7PRHnphRMsLOaYW47hcZmoZgG3UaWlY5iD7aNWXJvtARNuL2ZsHnX4OWRiHn3lOq7m
      AZRgD/rqdZyNTqprGYTTQAQfAncvar21ZRI7JGElA4fG+OCDG4x2BjEMne7+frTEGv6mNsqR
      ZVKZIsGWHrxmhZxswlnNsRLLohsGHo8PgYJwCFwuB6ap2R0g9ggzPoVUHMhCBFlOgdONsXIV
      Wd5EBEbA04rrwFMogVZkeg6166TVIW9fA5iGQaVSoabrqELZauEidRLpPE1BH+lciZamRkAS
      jSUJtTYTi6fo6gpRyYU5eyHCC889xNk3XuHRx56mNehHuL04VXsNsJd8uPaT+Siivm3XrgE/
      4yyQvNf/SGAYBqpq5/9tu5v9HMC2p21fBBsaG5Eo3Z3trK5v4qtTaGzp5NPMYKReJpEr09rU
      9HnEatvlSsUSNxeTNDf4yBcq5KomTx/pIp/NcXMpzZHRDuYXo7h9XupVk3CmytHRTgIWVgps
      WwRrpTz/7o//L8KRFf7kT/6SleUV1pfneeX1HzI3PcWrP3iL1YVpXn75u6wvL7GymWLqzgxT
      t65z5dpVlteTVlyHbRdwud0Mt/lI5as8NNKKw5QoAhYieR4/0sn8UppQ0EM4USDU4COXL1Da
      bSfESAnHDvfy2vfe5+DBYcLhNTajERKpNOsb6yTSaS5dv8WJw72888Z7LG2mmZiY5vqNCQb7
      2tmIxq24DtsuUMwXuBMp8/BoO/MLMYaH29B1A8M00TQdBDQ2BVAwEQ6VfZ0B0vmqpTFvGwCK
      w8Hw4YcIhoIcGOyitbWden8ddULH5fbglhpdzW28f3mKsUeOM3/7Imp9kP0HjtLU0ERrU9CK
      67DtAqZQqHPAUiyPv6mejnont2ciHBpo4fpcisNDTdxdTtDd0UQsmSNZhv6Qtc8BPtUi+Ker
      JYT4sPO1QEq5a1NcNuuZpomyi/tH2XuCbXuafU6w7YEy7x2QIdg6M0O1+AHp9ixQJc9f/z/f
      Rqvk+cu/+vvtB2RIjcnZxQcTne0LSnLu/VtcWskDMDOzytvjK2zE0nzvg3lm1jO8d3mOH1yc
      JmdxFmj7pvhajejd21wd72ZmIcKr//A3LG2mOTZ2gFs3Jgh19nHjxlV++7f+Y25eeI/uQ6cZ
      /+AtlIYmHj80zDs/muD3/7vfp86xe+d9ts/f8QPt3CluTS48Xhcin2NtJYqGYD2SIhDwMdak
      spGuEWjzWBbnjsVwo8fGeP2VdxkbCpHJVzlzeIDNWIEvfeVrBP0hDo4dRSknqErJxuY67fvG
      6G5t4O7sHJVchIJuz6r2NGkysZhgeiXO3FoKTIGqKAiPB5BoUpLP5Lk4m6SraZfsCf6QoVVJ
      pTLky2XcihO3U+POXJRjR0ZQVCelkkYyPIfqb2ZzfZWBfftRBSjo5JMxolmN0489gkuxM0M2
      WNlI0tvVjHmvs6BhGAhFQSAxTHCo1s4U7PMBbHva/TWAYRh2MZxtz9mhFEJSq9UwDR3j3nMB
      Q69RKJZ/xh8jyWbzn1eMti8QmVtBFvLItQvIjZtIKZGlOOb8D5HVCnLtPDK9gUzNIRcvIk1r
      Zx7bskC1Ypp//b/+G37zpS9R8QxSya3S197Ka+9d4fkXnqOOKlUd4pthekcPk48sI+qbuP7B
      dR577ARaJUtWr+P4oWH7CfEeI40ycukcouVJZCKMGHkeEIAD0dyLXDoHnn6ITkEtCw4HIpeH
      hoBlMW8bANKEU4dG+NG1CbxiiVgtz6yvhYaGJs6/dZZ0LMJzX32R2YVpJlbWqcQ2OfTI40Tm
      L3O9qY26aoQPplc5fui/seJ6bFZavwqmA5laRfSfRt59HXHsn0E5jEykET37kGknCBVUD8Ll
      2TpV0kLbpkBCCNoHD+PQSoT6OmkIBBnZ100ytoIj0MzwoaO0+hWqpgOPx8PocC8b84v0jo5R
      TERZiURoaW604lpsFhN9T6IcfhHRNYKMTyGahmHpHJRyCEcFdDcUxhH1IUSgGanp4Nvlx6Sa
      polQlK1bw0/09/mwyMk0TYT4ie9/mOaypz82tlqiCKd1D7o+yf0BYBgGhmFYHY/N9kDZxXC2
      z9RWN4h73UQ+8n15r3x+63XYuZPgg7ZtEazXyly8epPDQ11UnS20N3/84QWr8/M0dPQS8Fn7
      ONu2O5jxKfTIFErjPmQ5ipmO4Tr1W5ipWczYHUTDYczNm1DfieJQMPMx1L4XUIPWrQO2D4BK
      kfe+/zKVJx7HEC2srE3TPzhES0cv6c1Vcok4Zn0njTLBpevzvPjVF7h2+RLP/Oo/Z1+7vRts
      L5OVPMLTgxFdwDX2JJoxB4pAqW9Dv3sW1RNCaX8emZtG7TuCefcswuW0NOYdzwk+d+4ily69
      T6i5n5LbzeHBYWanrtE3eoR4dJOiKfBLk319PWTyBRLxBfoe+wbPjHVbdR22XUBWMhgbtzF1
      J0LmUAeehkoGqZVAT2PEV8H0gVKBagql8yRq6yjCaV1z3G1/s8PtZfTwUZqagzS293D3zm0G
      9o/gcdUYOXyCK5cvMRzqokHkmA/n2TfcjXRI+kPWprNsu4DqRNS342weAq0MbjdGZBmldRBZ
      rOE88MvI/Cp4WkDPIWsVqyO2F8G2ve3+HUDXdTRNszIWm+2B+8gU6PO8GUjTQDckTqeKYUrU
      XdwpwPZPI02D5Wgeqaj0h/woQDJfobneQyZfpr7eS6lQIlUx6Wv1Wxqr+s1vfvObsPVk1zAM
      aqUM/8cf/xkdAYVwzkU+HcHpdKIbJsViGb1Ww+Vy8PqrZ2l2VLgVLlLLJXF7/WQSmyQzeZLJ
      DB6nYG1tgzp/PeHVZarVLG++f5XW5mbGp2ZpDvopFkuUcklyVYnfu3ufFtp+ThJ0w+TWzCb7
      eprIZAtcm4kx0FHPuUuLhHqaGZ+OYFZLKP56/E7rfhjucECGSXfQxfmbkzjNJdbSEVoaQni9
      XjZiaQY7Wnjp177G4vQ4mcgsTaOnmF64gbu1n+zyPBVTp97lYmC4h4JZx8WL51lZD/PC808S
      31jj+29l6As2cfaVW3hCPUyP30A4fPzXv/9f4rSrJ34hCEVB1Mr09oZQhKCxoZ5QfR5FdTDS
      FURKibvOSXeDg2zZoM27i3qDAnSPHCe+Mo/qVvF4/IwdGWN5ZoKBZidGQydCQKhvH8898Sib
      6wtUhZtaVaO1vZeevl76u9uQpkm5nKcu0MJgZxsTs2H69x/E63JhShNfsJvnnjiFUBV6+/uw
      T9H4xRLJ6+zvqufW7CbReIb1VJHlSJr5RJGFcBanaTAeLtLTuEueA3xYDCdNE003MA0d1eGk
      kM9S5w8g9RoOhwMpVFxOlWq1hlNV0AyTYrFIndfH1jZgiUBw9+YHOLsOs6+jiWwmgz8QQCAw
      pXlv1AmcbhflYp6aIQjW+7c9Prd98WXzFQL1Hn76f+3HHar4oH2kGO6zzALJrd6J2y7cZttN
      7OcAtj1th0VwjaXVddqbg+iqn6DfveNvNKpFEnmdtha7/se2RatWOD+xQX9vK4n1GI293Qy3
      eFhdj7Mcz1Hf2Eg1k8bXEMRVq7KRq3D8UD+NddYtgrfvCS7n+PM/+2O+/itfQXN0srJ8m/2H
      xvD76onFUzTUORk7fpxqZp3LV2LolVU6Rh+iuHoXQ60jnkzw1PMvcP7t1+nqG6Klc5BqJsbx
      E8etuD7bAzS/vEm+olHTJUNtXmbyNYZbPPR0tZBK52n1m7xxp8ARn59EMks0W6FcM3bXAEDC
      k088zjvnLtDobUcPeNlYWGVheRUTJ119PRw5cRzDMInNTxKVkrI2TSyyyq+/9DyvvbvG/IX3
      WMoIVEeSiavX6Bw5gf3x/8Xncjg4NNLNymqMrl4fsga1mobToRCrSg753Ax2h8hl8xjCxdNj
      jcTTFTqD1pXTbxsAisNN/8gRBCahvhFm7k4zeOgQZi3L4FAPlfoB9GKKV9+5wuMvvcjtSz+i
      va+bvt523E4HLX4XraPH6C1eond4CD2xyMNPnLbi2mwP2OBABzemNhgZDDGzmcHE4PpkghP7
      Ozh+oBeHx0FXfR7d3UKTS7IYLXLyoLVFlP8fv7e52YH0CU8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 3 w/ Set and Parameters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI w/ Two Highest Segments' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab 3 Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Five Highest' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Region Sales Map' width='192'>
      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
      S1UoFDLPRfj/RZcS7s64PjMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Region Shipping Costs Map' width='192'>
      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
      W99pgsNw5H0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Region Shipping Costs Map w/ Parameter' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Two Highest Segments' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Two Least Used Shipping Modes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAN2klEQVR4nO3deWwc12HH8e/MnlzxFK2DoqiDpEVJpBOd1gEfkWxZaV07jRsELeKgRpu0
      QdIEaFGkadGiaJEeQFoDRdK4detECZoaPtvYkmXZNBjJukxZtkhaoijJokiJ5iGSokjuknvM
      vP5Bi7Abp7UY7ZLU+33+E7DH0/J9Z2Z3duc5xhiDiIUcx3Hc6R6EyHRSAGI1BSBWUwBiNQUg
      VlMAYjUFIFZTADOOR0/HGY41NtJy+hyJZJLTJ47S1j08eYux+CCHms6SzPgf+QjGGN672MnI
      eBqA0Su9tDQ1MZz86NtPPO0I+w8cYmjcu6H/m5lOAcwwo10n+KdHH+Vnh4/w410/oe3iZd48
      8BLNl65M3iY1dpVT57vIeB99DtP4GZ577B85erobgMYXn+ArX/kDmvqSv/iJzQi7n3+B/jG7
      AghO9wDkw8YGOrmSLOPhz36emsXzcZ0MFxyHff/xKPsf62HZpx7hkfvqKBrpxx/v45+//0M6
      Lw/Qd9HwpT/5JlvqFgKwJNzO0eYz3HvbXE61vcfW1TUYf4zXnvwR/1l/BDd/GV/9xtdY7Hfy
      2Pd+QB8+l8cj4KfY86//wJ63LhEpqeJbf/51FuSHp/lVyR7tAWaYkqo7WFPt8Z1v/xWPfu9Z
      BkaTGKB26/388Z9+nfMnDjM4EqevpwfPT9PV4fLwl77BIw9U8dJrr5F6f69w6ycrGDl3isvd
      TfQG1lM2P5/x/rPsPdLJV//i7/ns7cXs2/8Gr7/6U4rW/Srf/MPfozwaJhXv4uXjPfzWl7/M
      MtNO44WB6X1BskwBzCgGEy7h9//oL/nu3/4Z4617OXTyAuPAwspqKhYvwvUNvjGTfzknXMqK
      yqVU1q3ApEa59tWugnkrWDunk5/8eDe37lyPEzSMDV3GRMpZtayMFZUrGBsaYnDEYd3GNSxZ
      XEbIdTF+kt73LrFvz25GCsoI/oLDrJuFDoFmFMPZff/F820DrFtdzqiJUBTLYxxwHQcwuIDz
      wXukO9i3by/v/PfLVO/4IuGAAz74RKnbsIp/+7s3+JffvYV6H+ZWrCI//DpP/nQf8eZXWLr2
      IRZe7eGF3S9yZXmAnmSKUHQulXNLqVz1Ceamr7CgeM70vBQ54ujboDOJYexKL4def4P+sXEW
      Lq5l08Yaus80ESirYUmR4Y3GNlaurqaro4uq5UX89befoG5jHYVFZdx99xYKIi7G9xntO4sT
      LeRoUxd3bqnj3abjzKvbgt9zktcOniA2r4K779pKNDlAQ8MhRkyA0nnz2bx5M8PtJzjydhte
      YC537dzGwsLIdL8wWeE4jqMAZqBrfxLHcf7P23mJbn74g4M8/LXPEfkYt3//wbn2B792+59/
      PsO1WfGxHnOWUgCznPE9EmNJYnNi3LzTNHtmXQC+P3Eix3X13l1+ebPuBzG+709GIHIjzKoA
      RG40BSBWUwBiNQUgVlMAYjUFIFZTAGI1BSBWUwBiNQUgVlMAYjUFIFZTAGI1BSBW02+CZdq1
      d12e+KF/jixZWEooGAAUgMwA46kMufxd1gefS4dAYjUFIFZTAGI1BSBWUwBiNQUgVlMAYjUF
      IFZTAGI1BSBWUwBiNQUgVlMAYjUFIFZTAGI1BSBWy8EPYgy+7zOeGMN3g8TyIjgYxuJxPDfM
      nLwwDgYv4+EGg5OrIXrpDAQCBLQajGRR1gMwvsfhl5/iXF+aEBHu/o3PkDlzlN1vdjAnNE7l
      xk+zbl6Gf3/8ceo+9y3uXV2Kkxnhib/5DuW/8gXu37Qy20MUi2U9gEy8i3PdMXY8eBf5kSix
      QIJn3rrCF377iwSHL7Hn8DuMF1YRXljJ1bYmxmu2kb5wEq98JQU35+qcMoNkPYDk1S7Od13g
      4P4M8fg4W+/YCAvnUxIN4lFMOBjB8zIES5ZSGB2if/Aq7Sd6+OTqSozv43kenucBE7/lNMZM
      /ltuFrldpzGVSmH8iTmU9QBcN8jS6o088MBG4ucPsq+1F8aTeICXTpNOjeE4DsZzqSgqpL3j
      LIPRGLVz8uj1JlaEvLYqpOd5GGMIBALZHrbk1MT7vlwJhUK5uypEeG4l7tBehsfWkhxNEMxf
      RlHfW7Rcusr8xHm8UIxQyAXHY/mtldQ/XU9V7R1EQwa8n1+o2XEcLZMqv5QPzqGsBxCMlHLf
      3St57fmnSOeX8+ufWcmc9fN45tnneGdOMfd8+tfId4ZYXxsiOm8Zd62upei2FRSk+ilL6aot
      kl05Wih74mNOXHfiY01j8H0PH5dg4ONvzTOZDADBoMK4mbS2d+f0ukDVFfMJh4I4juPkaCY5
      BD44aR0HNxDUWTiZdpqDYjUFIFZTAGI1BSBWUwBiNQUgVlMAYjUFIFZTAGI1BSBWUwBiNQUg
      VlMAYjUFIFZTAGI1BSBWUwBiNQUgVlMAYjUFIFZTAGI1BSBWUwBiNQUgVlMAYjUFIFZTAGI1
      BSBWUwBiNQUgVlMAYjUFIFZTAGI1BSBWUwBiNQUgVlMAYjUFIFabngV3jcEABnD/10rwIrmU
      9QCM73O2+SgX+kYBqL39ThZExtj/s8OkI4Vs3LSFQkZpbmlhUe1WygqCgM/pxsOEFq+matHc
      bA9RLJb1QyDjZ3i37QyLlq+gpqaGwrDHoRdfIVC2kvL8JA1HGolfvcyBhlc4/HY7ngFv9BJ7
      XzrIua6+bA9PLJf1AHxvlI7uBMlkkvySeeT5I3Rk5nLnmmpqVq3BG71CMpkmb+lthAbeYTjl
      0dV8kkVr11AQMtkenlgu64dAbiDKpk1rGL3cyXN797H+/u0EC6IEAIJBgsEwxvgQLKakIEPv
      e5do68qwetkirnoGz/PIZDIAGGMwxpBOp7M9bMmp3G7okskkXmZiDmU9AMcNU7thE6Ggy7Lo
      VRo6h3AGBhj1fNxEAi81huu64BuqFxTReO4MwcIC8qMhrqYgEAgQCAQAJkMIBqfnvbtkyxC5
      jCASiRAOTcyhrM+k9FA7z+w9wS23FNB1YYjbH7iHcPQITz69m3nBQYqWbSYagUjEZWHNKnpe
      3kX1vb9JKNCPgz4hkuxyjDFZTc/4aQZ6exhOpIjkl7BwXgmOn+Rix0XSgSiLy8sJO2mGE2mK
      C2Nc7b9CqLCYkJ8i5TvMiUUnH0t7gJtTa3s3WZ6GH1JdMZ9wKIjjOE7WA7iRFMDNaToD0Jlg
      sZoCEKspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCr
      KQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCrKQCxmgIQqykAsZoC
      EKspALGaAhCrKQCxmgIQqykAsZoCEKspALGaAhCr5SyA8fgg73b24vkGP52g7WQLJ9veJZHy
      8FJjXOo4z3DSe//Whr7OdgaGE7kanlgqRwGkePOl53ly7wHGkklO7X+VN8/10nn6KA1vnSI+
      cJGnf/R99p+8jAFID/LU47s42tqZm+GJtbIfgDG0v32AruIablt+C168n+OXQnz+wXvY/qkd
      xLsvMDaeIbZ8DZn2Y4ykfXpb3qboExsoiZqsD0/sFsz2E6THBzl2oofbd26j5e1TZDJpQqUF
      hBwHPxImGIpijAeRUoryU/T39XPu3Tirl5SRzBg8zyOTyQBgjMEYQzqdzvawJadyu6FLJpN4
      mYk5lPUArpw7zqWRccKNhznVco5Yfh6p4WFSgEkmSScTOI4DvsPy0kLOXmgjmT+HkliE7jQE
      AgECgQDAZAjBYNaHLTk1RC4jiEQihEMTcyjrM6m05k5+pyKJSY2QdmLU1dVRMPgq+w42scDr
      IDx3EZFIgGDQULHyVl56/Fmqtz5AJDgK2tBLljnGmJykZ7wUnd2XWbSwDDc9zOHDx8hECli7
      fgP5JOjsT1BZMY+OU2eILakilh5l1HNZcEvx5GNoD3Bzam3vJkfTEIDqivmEQ0Ecx3FyFsCH
      GDO5w3Mc52PfTQHcnKYzgOmZSY7Dx5/2ItmjM8FiNQUgVlMAYjUFIFZTAGI1BSBWUwBiNQUg
      VlMAYjUFIFZTAGI1BSBWUwBiNQUgVpvS16E7OzuJx+MkEgnq6+t58MEHWbly5XV9t19kJpjS
      HqClpYWhoSEOHDjAunXrOHDgAJ7n/f93FJlhphRAYWEhR48exXVdKioqiMVi2vrLrDSlQ6D1
      69cTiURYunQpjuOwffv2ySs3iMwmUwpgcHCQxsZG6uvr2b59OyMjIyxatEh7AZl1pnQI1Nzc
      TFVVFRUVFUSjUTo7O/UeQGalKe0BCgoKaGpqYnh4mL6+PiorK3UIJLPSlALYuHEjwWCQM2fO
      UF5ezpYtW3T4I7PSdQWQSCRoaGiYvD5PcXEx8Xiczs5OnQeQWem6AnAch1gsNhnANaFQ6IYO
      SiRXriuAvLw8tm3bxunTp3nhhRdwXZe8vDyi0ShVVVXZGqNI1kzpU6DW1lY2b95McXExO3fu
      pKenJ6eXthO5Uab0Jnj+/PkAuK5LQ0MDruvi+z6uq+/Wyewy5TPByWSS6upqWltbqa2t1QVr
      ZVa6rk12JpNhz549jIyM4Louu3bt4tixY8TjcR0Cyax0XQEkEglOnTpFKBSioaGB0tJSNmzY
      QH19vQKQWem6AggEAhhjaG5upqGhgYceeojy8nKSyaQCkFnpugLIy8vjvvvu4/jx4+zYsYOS
      khK6u7tZu3at3gDLrDQ9K8RMkVaIuTlN5wox2myL1RSAWE0BiNX+B83uASd+8VLmAAAAAElF
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
